import java.util.*;

// 100%
// 수학적 지식이 필요한 문제로 보인다
// a < b < c < d 일 때 a < (a+b)/2 < b , c < (c+d)/2 < d, (a+b)/2 < (c+d)/2
// -> (a+b)/2 < (a+b+c+d)/4 < (c+d)/2

// 집합의 일부분의 평균의 최솟값은 반드시 크기가 2 이거나 3인 부분집합의 평균
// 크기가 4 이상인 부분집합의 평균은 크기가 2이거나 3인 부분집합의 평균보다 작을 수 없다

class Solution {
    public int solution(int[] A) {
        /*
        
        배열의 갯수 : 2~100,000
        배열의 범위 : -10,000 ~ 10,000  -> O(N)
        
        avg : (P~Q) / (Q-P+1) return : starting position(가장 작은 평균의 시작 위치)
        
        idx : 0 1 2 3 4 5 6
        val : 4 2 2 5 1 5 8
        
        2개씩 묶어서(6개)
        0~1 : 4 + 2 / 2 = 3
        1~2 : 2 + 2 / 2 = 2 (return 1)
        2~3 : 2 + 5 / 2 = 3.5
        3~4 :
        4~5 :
        5~6 :
        
        3개씩 묶어서(5개)
        0~2 : 4 + 2 + 2 / 3 = 2.***
        1~3 : 2 + 2 + 5 / 3 = 3
        2~4 :
        3~5 :
        4~6 :
        
        
        */
        
        int answer = 0;
        int sum = 0;
        double avg = 0;
        
        for(int i : A){
            sum += i;
        }
        
        avg = (double) sum / (double) A.length;
        
        for(int i=0; i<A.length; i++){
            if(i+1 < A.length){
                if(avg > ((double)(A[i] + A[i+1]) / (double)2)){
                    avg = ((double)(A[i] + A[i+1]) / (double)2);
                    answer = i;
                }
            }
            if(i+2 < A.length){
                if(avg > ((double)(A[i] + A[i+1] + A[i+2]) / (double)3)){
                    avg = ((double)(A[i] + A[i+1] + A[i+2]) / (double)3);
                    answer = i;
                }
            }
        }
        
        return answer;
    }
}


// 배열의 모든 값의 합 평균은 부분집합의 값의 합 평균보다 크거나 같다(?)
// 라고 생각해서 avg에 값을 위와 같이 초기화해주었으나 정확한 명제라고 확인할 수 없어서
// 두번 째 풀이

import java.util.*;

class Solution {
    public int solution(int[] A) {
        int answer = 0;
        int sum = 0;
        double avg = ((double)(A[0] + A[1]) / (double)2);
        
        
        for(int i=0; i<A.length; i++){
            if(i+1 < A.length){
                if(avg > ((double)(A[i] + A[i+1]) / (double)2)){
                    avg = ((double)(A[i] + A[i+1]) / (double)2);
                    answer = i;
                }
            }
            if(i+2 < A.length){
                if(avg > ((double)(A[i] + A[i+1] + A[i+2]) / (double)3)){
                    avg = ((double)(A[i] + A[i+1] + A[i+2]) / (double)3);
                    answer = i;
                }
            }
        }
        
        return answer;
    }
}